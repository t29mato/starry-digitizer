name: Vercel Preview Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
jobs:
  UnitTest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - name: Install npm packages
        run: yarn
      - name: Static code analysis
        run: yarn lint
      - name: Unit test
        run: yarn test
      - name: Jest Coverage Report
        uses: ArtiomTr/jest-coverage-report-action@v2
        with:
          check-coverage-only-changed-files: true
          compare-to-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          test-script: npm run test:coverage
  Deploy-Preview:
    runs-on: ubuntu-latest
    needs: [UnitTest]
    if: success()
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: |
          DEPLOY_URL=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          echo "DEPLOY_URL=$DEPLOY_URL" >> $GITHUB_ENV
      - name: Notify Slack
        uses: rtCamp/action-slack-notify@v2.1.0
        env:
          SLACK_WEBHOOK: ${{ secrets.DIGITIZER_DEV_SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: |
            Preview URL: ${{ env.DEPLOY_URL }}
